{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program\\\\React\\\\Anime App\\\\src\\\\Components\\\\AddToList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // Helper function to get the stored anime list from local storage\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getStoredAnimeList = () => {\n  const storedAnimeList = localStorage.getItem('animeList');\n  return storedAnimeList ? JSON.parse(storedAnimeList) : [];\n};\n\nexport const AnimeList = _ref => {\n  _s();\n\n  let {\n    animelist,\n    setAnimeInfo,\n    animeComponent,\n    handleList\n  } = _ref;\n  const AddToList = animeComponent;\n  const [storedAnimeList, setStoredAnimeList] = useState([]); // Load stored anime list from local storage on initial render\n\n  useEffect(() => {\n    const storedList = getStoredAnimeList();\n    setStoredAnimeList(storedList);\n  }, []); // Function to add anime to the local storage and update the state\n\n  const addAnimeToList = anime => {\n    const updatedList = [...storedAnimeList, anime];\n    setStoredAnimeList(updatedList);\n    localStorage.setItem('animeList', JSON.stringify(updatedList));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: animelist ? animelist.map((anime, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        onClick: () => setAnimeInfo(anime),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: anime.images.jpg.large_image_url,\n          alt: \"animeImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"anime-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: anime.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay\",\n            onClick: () => handleList(anime),\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: anime.title_japanese\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"SYNOPSIS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"synopsis\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: anime.synopsis\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addAnimeToList(anime),\n              children: \"Add To List +\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Not Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(AnimeList, \"/IyGJrpqYWTDxDOG+KKHqu2zrHg=\");\n\n_c = AnimeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimeList\");","map":{"version":3,"names":["React","useEffect","useState","getStoredAnimeList","storedAnimeList","localStorage","getItem","JSON","parse","AnimeList","animelist","setAnimeInfo","animeComponent","handleList","AddToList","setStoredAnimeList","storedList","addAnimeToList","anime","updatedList","setItem","stringify","map","index","images","jpg","large_image_url","title","title_japanese","synopsis"],"sources":["D:/Program/React/Anime App/src/Components/AddToList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n// Helper function to get the stored anime list from local storage\r\nconst getStoredAnimeList = () => {\r\n  const storedAnimeList = localStorage.getItem('animeList');\r\n  return storedAnimeList ? JSON.parse(storedAnimeList) : [];\r\n};\r\n\r\nexport const AnimeList = ({ animelist, setAnimeInfo, animeComponent, handleList }) => {\r\n  const AddToList = animeComponent;\r\n  const [storedAnimeList, setStoredAnimeList] = useState([]);\r\n\r\n  // Load stored anime list from local storage on initial render\r\n  useEffect(() => {\r\n    const storedList = getStoredAnimeList();\r\n    setStoredAnimeList(storedList);\r\n  }, []);\r\n\r\n  // Function to add anime to the local storage and update the state\r\n  const addAnimeToList = (anime) => {\r\n    const updatedList = [...storedAnimeList, anime];\r\n    setStoredAnimeList(updatedList);\r\n    localStorage.setItem('animeList', JSON.stringify(updatedList));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {animelist ? (\r\n        animelist.map((anime, index) => {\r\n          return (\r\n            <div className=\"card\" key={index} onClick={() => setAnimeInfo(anime)}>\r\n              <img src={anime.images.jpg.large_image_url} alt=\"animeImage\" />\r\n              <div className=\"anime-info\">\r\n                <h4>{anime.title}</h4>\r\n                <div className=\"overlay\" onClick={() => handleList(anime)}>\r\n                  <h4>{anime.title_japanese}</h4>\r\n                  <h3>SYNOPSIS</h3>\r\n                  <div className=\"synopsis\">\r\n                    <p>{anime.synopsis}</p>\r\n                  </div>\r\n                  <button onClick={() => addAnimeToList(anime)}>Add To List +</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <p>Not Found</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAEA;;;;;AACA,MAAMC,kBAAkB,GAAG,MAAM;EAC/B,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAxB;EACA,OAAOF,eAAe,GAAGG,IAAI,CAACC,KAAL,CAAWJ,eAAX,CAAH,GAAiC,EAAvD;AACD,CAHD;;AAKA,OAAO,MAAMK,SAAS,GAAG,QAA6D;EAAA;;EAAA,IAA5D;IAAEC,SAAF;IAAaC,YAAb;IAA2BC,cAA3B;IAA2CC;EAA3C,CAA4D;EACpF,MAAMC,SAAS,GAAGF,cAAlB;EACA,MAAM,CAACR,eAAD,EAAkBW,kBAAlB,IAAwCb,QAAQ,CAAC,EAAD,CAAtD,CAFoF,CAIpF;;EACAD,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAGb,kBAAkB,EAArC;IACAY,kBAAkB,CAACC,UAAD,CAAlB;EACD,CAHQ,EAGN,EAHM,CAAT,CALoF,CAUpF;;EACA,MAAMC,cAAc,GAAIC,KAAD,IAAW;IAChC,MAAMC,WAAW,GAAG,CAAC,GAAGf,eAAJ,EAAqBc,KAArB,CAApB;IACAH,kBAAkB,CAACI,WAAD,CAAlB;IACAd,YAAY,CAACe,OAAb,CAAqB,WAArB,EAAkCb,IAAI,CAACc,SAAL,CAAeF,WAAf,CAAlC;EACD,CAJD;;EAMA,oBACE;IAAA,UACGT,SAAS,GACRA,SAAS,CAACY,GAAV,CAAc,CAACJ,KAAD,EAAQK,KAAR,KAAkB;MAC9B,oBACE;QAAK,SAAS,EAAC,MAAf;QAAkC,OAAO,EAAE,MAAMZ,YAAY,CAACO,KAAD,CAA7D;QAAA,wBACE;UAAK,GAAG,EAAEA,KAAK,CAACM,MAAN,CAAaC,GAAb,CAAiBC,eAA3B;UAA4C,GAAG,EAAC;QAAhD;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAK,SAAS,EAAC,YAAf;UAAA,wBACE;YAAA,UAAKR,KAAK,CAACS;UAAX;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAK,SAAS,EAAC,SAAf;YAAyB,OAAO,EAAE,MAAMd,UAAU,CAACK,KAAD,CAAlD;YAAA,wBACE;cAAA,UAAKA,KAAK,CAACU;YAAX;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE;cAAK,SAAS,EAAC,UAAf;cAAA,uBACE;gBAAA,UAAIV,KAAK,CAACW;cAAV;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QAHF,eAME;cAAQ,OAAO,EAAE,MAAMZ,cAAc,CAACC,KAAD,CAArC;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QANF;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA,GAA2BK,KAA3B;QAAA;QAAA;QAAA;MAAA,QADF;IAgBD,CAjBD,CADQ,gBAoBR;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EArBJ,iBADF;AA0BD,CA3CM;;GAAMd,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}